pub inline native tof32(n: i32) -> f32 /{
    ((float) $n)
}/

pub native toi32(n: f32) -> Option<i32> /{
    int result = (int)$n;
    return
        $call(Option::Some, result)
    ;
}/

pub inline native divf(n1: i32, n2: i32) -> f32 /{
    (((float)$n1) / ((float) $n2))
}/

pub inline native sub(a: f32, b: f32) -> f32 /{
    ($a - $b)
}/

pub inline native add(a: f32, b: f32) -> f32 /{
    ($a + $b)
}/

pub inline native add(a: f32, b: i32) -> f32 /{
    ($a + $b)
}/

pub inline native mul(a: f32, b: f32) -> f32 /{
    ($a * $b)
}/

pub inline native div(a: f32, b: f32) -> f32 /{
    ($a / $b)
}/

pub inline native sub(a: f32, b: i32) -> f32 /{
    ($a - $b)
}/

pub inline native sub(a: i32, b: f32) -> f32 /{
    ($a - $b)
}/

pub inline native greater(a: f32, b: f32) -> bool /{
    ($a > $b)
}/

pub inline native greater(a: f32, b: i32) -> bool /{
    ($a > $b)
}/

pub inline native less(a: f32, b: f32) -> bool /{
    ($a < $b)
}/

pub inline native less(a: f32, b: i32) -> bool /{
    ($a < $b)
}/

pub inline native mul(f1: f32, n2: i32) -> f32 /{
    ($f1 * $n2)
}/

pub inline native div(a: f32, b: i32) -> f32 /{
    ($a / $b)
}/