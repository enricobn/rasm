pub inline native STDOut() -> File /{
    $include(<stdio.h>)
    stdout
}/

native none() -> Option<IOError> /{
    $enumDeclaration(_result)
    $enumVariantDeclaration(_none,None)
    _result->variant_num = 1;
    _result->variant = _none;
    return _result;
}/

pub native print(file: File, s: str) -> Option<IOError> /{
    $include(<stdio.h>)
    fprintf(file, "%s", $s);

    return $call(none);
}/

pub native print(file: File, n: i32) -> Option<IOError> /{
    $include(<stdio.h>)
    fprintf(file, "%d", $n);

    return $call(none);
}/

pub native print(file: File, n: f32) -> Option<IOError> /{
    $include(<stdio.h>)
    fprintf(file, "%f", $n);

    return $call(none);
}/

pub native print(file: File, b: bool) -> Option<IOError> /{
    $include(<stdio.h>)
    if ($b) {
        fprintf(file, "true");
    } else {
        fprintf(file, "false");
    }

    return $call(none);
}/

pub native print(file: File, c: char) -> Option<IOError> /{
    $include(<stdio.h>)
    fprintf(file, "%s", $c);

    return $call(none);
}/

pub native println(file: File) -> Option<IOError> /{
    $include(<stdio.h>)
    fprintf(file, "\n");

    return $call(none);
}/