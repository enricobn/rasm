pub fn call<T>(lambda: fn() -> T) -> T {
    lambda();
}

pub fn call<PT,T>(lambda: fn(PT) -> T, v: PT) -> T {
    lambda(v);
}

pub fn call<PT1,PT2,T>(lambda: fn(PT1,PT2) -> T, v1: PT1, v2: PT2) -> T {
    lambda(v1, v2);
}

pub fn call<PT1,PT2,PT3,T>(lambda: fn(PT1,PT2,PT3) -> T, v1: PT1, v2: PT2, v3: PT3) -> T {
    lambda(v1, v2,v3);
}

pub fn curry<PT,T>(lambda: fn(PT) -> T, v: PT) -> fn() -> T {
    { lambda(v); };
}

pub fn curry<PT1,PT2,T>(lambda: fn(PT1,PT2) -> T, v1: PT1) -> fn(PT2) -> T {
    fn(v2) { lambda(v1, v2); };
}

pub fn curry<PT1,PT2,PT3,T>(lambda: fn(PT1,PT2,PT3) -> T, v1: PT1, v2: PT2) -> fn(PT3) -> T {
    fn(v3) { lambda(v1, v2, v3); };
}

pub fn curryRight<PT1,PT2,T>(lambda: fn(PT1,PT2) -> T, v2: PT2) -> fn(PT1) -> T {
    fn(v1) { lambda(v1, v2); };
}
