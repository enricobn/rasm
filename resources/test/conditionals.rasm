include "std.rasm"


//False\nTrue\nequal\nnot equal\nless\nnot less\ngreater\nnot greater\nless or equal\nless or equal\nnot less or equal\n


    ifRun(false,{ -> sprintln("True");},{ -> sprintln("False");});

    ifRun(true,{ -> sprintln("True");},{ -> sprintln("False");});

    ifRun(eq(0,0),{ -> sprintln("equal");},{ -> sprintln("not equal");});

    ifRun(eq(0,1),{ -> sprintln("equal");},{ -> sprintln("not equal");});

    ifRun(less(1,2),{ -> sprintln("less");},{ -> sprintln("not less");});

    ifRun(less(0,0),{ -> sprintln("less");},{ -> sprintln("not less");});

    ifRun(greater(1,0),{ -> sprintln("greater");},{ -> sprintln("not greater");});

    ifRun(greater(0,1),{ -> sprintln("greater");},{ -> sprintln("not greater");});

    ifRun(lessOrEqual(0,1),{ -> sprintln("less or equal");},{ -> sprintln("not less or equal");});

    ifRun(lessOrEqual(1,1),{ -> sprintln("less or equal");},{ -> sprintln("not less or equal");});

    ifRun(lessOrEqual(2,1),{ -> sprintln("less or equal");},{ -> sprintln("not less or equal");});

    println(ifImmediate(false, 100, 200));
    println(ifImmediate(true, 100, 200));

    // TODO I don't like it because, if an assertion fails I don't know which have failed and the program exits
    assertFalse(or(false, false));
    assert(or(true, false));
    assert(or(false, true));
    assert(or(true, true));

    assertFalse(and(false, false));
    assertFalse(and(true, false));
    assertFalse(and(false, true));
    assert(and(true, true));
    assert(not(false));
    assertFalse(not(true));



