include "std.rasm"

enum List<T> {
  Full(head: T, tail: List<T>),
  Empty
}

printWith(15);

fn printWith(v1: i32) {
    listPrint(listMap(List::Full(10, List::Full(20, List::Empty())), { v -> nadd(v, v1);}), { v -> nprint(v);});
}

fn listPrint(l: List<T>, print: fn(T) -> ()) {
    ListMatch(l, { head,tail ->
        print(head);
        ListMatch(tail, { head1,tail1 -> sprint(","); }, { -> });
        listPrint(tail, print);
    }, { -> });
}

fn listMap(l: List<T>, map: fn(T) -> T) -> List<T> {
    ListMatch(l, { head,tail -> List::Full(map(head), listMap(tail, map)); }, { -> List::Empty();});
}
