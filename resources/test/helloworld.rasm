helloWorld();

fn helloWorld() {
    sprintln("Hello world");
    sprintln("Hi");
}

/**
 * Prints the string to standard output adding a line feed to the end.
 **/
asm sprintln(s: &str) /{
    push    eax
    mov     eax,[ebp+4+4]
    push    eax
    call    sprint
    pop     eax
    pop     eax

    mov     eax, 0Ah    ; move 0Ah into eax - 0Ah is the ascii character for a linefeed
    push    eax         ; push the linefeed onto the stack so we can get the address
    push    esp         ; push the address of the current stack pointer where is the \n char for sprint
    call    sprint      ; call our sprint function
    pop     eax         ; remove the linefeed char from the stack
    pop     eax
}/

/** 
 * Prints the string to the standard output.
 **/
asm sprint(s: &str) /{
    push    edx
    push    ecx
    push    ebx
    push    eax
    mov     eax,[ebp+4+4]
    push    eax
    call    slen

    mov     edx, eax
    pop     eax

    mov     ecx, eax
    mov     ebx, 1
    mov     eax, 4
    int     80h

    pop     eax
    pop     ebx
    pop     ecx
    pop     edx
}/

/** Returns the length of the string **/
asm slen(s: &str) -> i32[eax] /{
    push    ebx             ; Save ebx to the stack since we use it
    mov     eax, [ebp+4+4]  ; Get the parameter from the stack (4 the PC + 4 ebp) and put it in eax
    mov     ebx, eax

nextchar:
    cmp     byte [eax], 0
    jz      finished
    inc     eax
    jmp     nextchar

finished:
    sub     eax, ebx
    pop     ebx
}/