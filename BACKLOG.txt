Doing
------
- game of life

Next
-----
- put standard libraries in another path
- support for boolean
- try to re enable inline
  - the problem arises with lambda space
- optimize the copy of the parent lambda space: do not create parameters that are overridden by parent memcopy
- test inner lambda that get a value from a parent lambda parameter
- optimize memory for lambda space:
  - if there are more lambda in a call, all share the same lambda space (but not the address to the function), now it's duplicated:
    - I can create only one lambda space, then I can pass to the lambda, the address to the real function and the address to the lambda space
- implement range
- rename asm to native
- user cannot define native functions
- some functions from the std library should not be called (tag with internal?), for example malloc, memcopy
- optimize fibonacci
    - backend for 32 and 64 bit
    - move more code as possible from codegen to function_call_parameters
- refactor codegen lambda parameters: it's too complex
- enum:
  - match function should be enum::match, but it's not supported by parser, in general I would like to have some namespace for functions, to be xx.yy.zz::function_name
- I can close an already closed TokensGroup (make a test)
- safe command line arguments (use Option?)
- add command line argument to print the syntax tree (codegen/md.rs -> Parser::print(&self.module))
- rename lambda to closure?
- line errors in codegen
- type checker
- type parameters for functions
- move std.rasm in another folder
- split std.rasm
  - a file for not asm functions
  - io.rasm
  - string.rasm
  - enum.rasm
-