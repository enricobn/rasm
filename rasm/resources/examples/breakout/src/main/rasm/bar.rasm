pub struct Bar {
    x: f32,
    velocity: i32,
    lastUpdate: TimeVal
}

pub fn update(bar: Bar, actualTime: TimeVal, keys: Vec<i32>) -> Bar {
    let elapsed = elapsedTime(actualTime, bar.lastUpdate);

    let left = negate(count(keys, eq.curry(80)));
    let right = count(keys, eq.curry(79));

    let leftOrRight = add(left, right);

    let newVelocity = if(eq(leftOrRight, 0), {
        toi32(div(tof32(bar.velocity), 1.03), 0);
    }, {
        add(bar.velocity, mul(leftOrRight, 30));
    });

    let realVelocity = between(newVelocity, -1000, 1000);

    let seconds = div(tof32(elapsed), 1000000);

    let diff = mul(seconds, newVelocity);

    let newBarPos = add(bar.x, diff);

    Bar(newBarPos, realVelocity, actualTime);
}