pub struct Bar {
    x: float,
    velocity: int,
    lastUpdate: TimeVal
}

pub fn update(bar: Bar, actualTime: TimeVal, keys: Vec<int>) -> Bar {
    let elapsed = elapsedTime(actualTime, bar.lastUpdate);

    let left = keys.count(eq.curry(80)).negate;
    let right = keys.count(eq.curry(79));

    let leftOrRight = left.add(right);

    let newVelocity = if(eq(leftOrRight, 0), {
        bar.velocity.tof32.div(1.03).toi32(0);
    }, {
        bar.velocity.add(leftOrRight.mul(30));
    });

    let realVelocity = between(newVelocity, -1000, 1000);

    let seconds = elapsed.tof32.div(1000000);

    let diff = seconds.mul(newVelocity);

    let newBarPos = bar.x.add(diff);

    Bar(newBarPos, realVelocity, actualTime);
}