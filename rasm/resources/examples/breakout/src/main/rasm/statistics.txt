/*
parse ended in 11.347163ms
type check ended in 87.284773ms
code generation ended in 30.556844ms
assembler ended in 185.226611ms
linker ended in 34.471721ms
finished in 351.85742ms
*/

/*
added support for unit type and fixed problems in type check

parse ended in 16.922886ms
type check ended in 133.284106ms
code generation ended in 31.320571ms
assembler ended in 188.869175ms
linker ended in 34.723392ms
finished in 408.42347ms
*/

/*
refactoring, using Result for type check

parse ended in 11.007671ms
type check ended in 193.246476ms
code generation ended in 34.639543ms
assembler ended in 188.135923ms
linker ended in 36.746701ms
finished in 471.147908ms
*/

/*
new type check

parse ended in 12.46228ms
type check ended in 906.919916ms
code generation ended in 29.835678ms
assembler ended in 186.695598ms
linker ended in 37.27556ms
finished in 1.177244801s
*/

/*
new type check

type check ended in 221.89785ms
*/

/*
optimized recursive expression transformation

type check ended in 111.299023ms
*/

/*
removed clone of ASTType

type check ended in 105.080644ms
*/

/*
added special case for determining the type of a parameterless lambda

type check ended in 117.623057ms
*/

/*
    removed print of stack in Display for TypeCheckError

    type check ended in 88.168403ms
*/

/*
    optimized Regex using lazy_static

    type check ended in 66.804596ms
*/

/*
to sign a mark

parse ended in 18.702616ms
type check ended in 67.796837ms
code generation ended in 31.794425ms
assembler ended in 189.078683ms
linker ended in 30.760407ms
finished in 340.395027ms
*/

/*
a lot of changes...

parse ended in 24.344907ms
type check ended in 72.598315ms
code generation ended in 38.22388ms
assembler ended in 205.848908ms
linker ended in 34.690992ms
finished in 378.460432ms

*/

/*
may be because loadHighScores is more complex, because toi32 returns an Option (a change that has been done a couple of
commits ago, but only now I have updated this perf. backlog)

type check ended in 78.464592ms
code generation ended in 42.02035ms
assembler ended in 211.553475ms
linker ended in 37.652852ms
finished in 399.254542ms
*/

/*
Some changes, the last adding a "not matching type" error and in that case cloning the stack


type check ended in 87.39312

*/

/*
    some changes, the main is collecting new functions in a Vec during type check

    type check ended in 146.112022ms
*/

/*
    C backend

    type check ended in 114.15174ms
    code generation ended in 27.682163ms
    compiler ended in 741.361392ms
    finished in 902.150321ms
*/

/*
    optimized type check for a call using first argument

    type check ended in 78.275627ms
*/

/*
    optimized type check using new_functions hashmap and fixing unique type name using the real namespace of custom types
    type check ended in 70.941997ms
*/

/*
    some optimizations

    parse ended in 17.60938ms
    type check ended in 67.907228ms
    code generation ended in 26.740332ms
    compiler ended in 710.826573ms
    finished in 824.784089ms
*/

/*
    what happened?

    type check ended in 97.207711ms
*/

/*
    changed some function names in std library
    type check ended in 68.915151ms
*/

/*
    using ASTTypeChecker in TypeCheck
    type check ended in 123.543843ms
*/

/*
    fixed time evaluation
    AST type check ended in 33.58431ms
    type check ended in     62.9865ms
*/

/*
    parallel ASTTypeChecker.from_modules_container
    AST type check ended in 13.83144ms
    type check ended in 62.13033ms
*/

/*
    little optimization
    AST type check ended in 10.410923ms
    type check ended in 61.791978ms
*/

/*
    breakout.c size 709461
*/

/*
    C target: removed addref/deref for enums with only constant variants
    breakout.c size 705258
*/

/*
    C target: reusing lambda struct for lambdas that has the same signature considering native types
    breakout.c size 688369
*/

C target: removing unused lambda variable
breakout.c size 686950

C target: optimize lambda addref /deref creation where not needed
breakout.c size 680592

C target: optimize call to addref /deref for enum with only parameterless variants
breakout.c size 676433

C target: optimized addref /deref for enum when variant without reference types
breakout.c size 675996

C target: switched to GNU make for build
compiler ended in 684.852128ms
finished in 825.633899ms

C target: before compiler optimization
type check ended in 94.139064ms
code generation ended in 56.226184ms
compiler ended in 763.898399ms
finished in 973.014665ms

C target: source split
parse ended in 27.281906ms
AST type check ended in 16.202109ms
type check ended in 91.345788ms
code generation ended in 52.855415ms
compiler ended in 530.732426ms
finished in 723.371174ms

more on C target: source split
parse ended in 29.504479ms
AST type check ended in 16.710323ms
type check ended in 93.493062ms
code generation ended in 49.325568ms
compiler ended in 473.808981ms
finished in 668.436647ms