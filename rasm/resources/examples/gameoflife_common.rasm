struct Cell {
    x: i32,
    y: i32
}

fn lineCells(line: EnumerateEntry<str>) -> List<Cell> {
    let y = index(line);
    let lineStr = value(line);

    map(filter(listEnumerate(chars(lineStr)), { cell ->
        let cellStr = value(cell);

        match(chars(cellStr), { head, tail -> eq(head, "O"); }, { -> false;});
    }), { cell -> Cell(index(cell), y); });
}

fn filterLines(lines: List<str>) -> List<str> {
    filter(lines, { line ->
        match(chars(line), { head, tail -> not(eq(head, "!")); }, { -> false;});
    });
}

// https://man7.org/linux/man-pages/man4/console_codes.4.html
fn moveUp(count: i32) {
    printESC();
    print("[");
    print(count);
    print("A");
}