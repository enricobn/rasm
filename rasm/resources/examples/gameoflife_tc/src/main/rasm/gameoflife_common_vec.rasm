pub struct FullCell {
    cell: Cell,
    adjacents: Vec<Cell>
}

pub fn readCellFile(file: str) -> Vec<Cell> {
    let linesEnumerate = listEnumerate(filterLines(lines(readFile(file))));

    linesEnumerate.fmap(fn(line) { lineCells(line); }).toVec();
}

pub fn allCells(width: i32, height: i32) -> Vec<FullCell> {
    cartesianProduct(vecRange(0, height), vecRange(0, width), fn(y, x) {
        let cell = Cell(x, y);

        FullCell(cell, adjacents(cell));
    });
}

pub fn adjacents(cell: Cell) -> Vec<Cell> {
    let x = cell.x;
    let y = cell.y;

    let left = add(x, -1);
    let right = add(x, 1);
    let up = add(y, -1);
    let down = add(y, 1);

    vecOf(
        Cell(left, up),
        Cell(left, y),
        Cell(left, down),
        Cell(x, up),
        Cell(x, down),
        Cell(right, up),
        Cell(right, y),
        Cell(right, down)
    );
}