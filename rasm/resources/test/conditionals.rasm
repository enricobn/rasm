ifRun(false,{ -> println("True");},{ -> println("False");});

ifRun(true,{ -> println("True");},{ -> println("False");});

ifRun(eq(0,0),{ -> println("equal");},{ -> println("not equal");});

ifRun(eq(0,1),{ -> println("equal");},{ -> println("not equal");});

ifRun(less(1,2),{ -> println("less");},{ -> println("not less");});

ifRun(less(0,0),{ -> println("less");},{ -> println("not less");});

ifRun(greater(1,0),{ -> println("greater");},{ -> println("not greater");});

ifRun(greater(0,1),{ -> println("greater");},{ -> println("not greater");});

ifRun(lessOrEqual(0,1),{ -> println("less or equal");},{ -> println("not less or equal");});

ifRun(lessOrEqual(1,1),{ -> println("less or equal");},{ -> println("not less or equal");});

ifRun(lessOrEqual(2,1),{ -> println("less or equal");},{ -> println("not less or equal");});

println(if(false, 100, 200));
println(if(true, 100, 200));

// TODO I don't like it because, if an assertion fails I don't know which have failed and the program exits
assertFalse(or(false, false));
assertTrue(or(true, false));
assertTrue(or(false, true));
assertTrue(or(true, true));

assertFalse(and(false, false));
assertFalse(and(true, false));
assertFalse(and(false, true));
assertTrue(and(true, true));
assertTrue(not(false));
assertFalse(not(true));

assertTrue("<", ifChar('<').eq('<'));
assertTrue("=", ifChar('=').eq('='));
assertTrue(">", ifChar('>').eq('>'));
assertTrue("a", ifChar('a').eq('?'));

fn ifChar(c: char) -> char {
    if( c.eq('<'),
        { -> '<'; },
        c.eq('='),
        { -> '='; },
        c.eq('>'),
        { -> '>'; },
        { -> '?'; }
    );
}