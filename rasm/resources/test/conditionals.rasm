if(false,{ -> println("True");},{ -> println("False");});

if(true,{ -> println("True");},{ -> println("False");});

if(eq(0,0),{ -> println("equal");},{ -> println("not equal");});

if(eq(0,1),{ -> println("equal");},{ -> println("not equal");});

if(less(1,2),{ -> println("less");},{ -> println("not less");});

if(less(0,0),{ -> println("less");},{ -> println("not less");});

if(greater(1,0),{ -> println("greater");},{ -> println("not greater");});

if(greater(0,1),{ -> println("greater");},{ -> println("not greater");});

if(lessOrEqual(0,1),{ -> println("less or equal");},{ -> println("not less or equal");});

if(lessOrEqual(1,1),{ -> println("less or equal");},{ -> println("not less or equal");});

if(lessOrEqual(2,1),{ -> println("less or equal");},{ -> println("not less or equal");});

println(if(false, 100, 200));
println(if(true, 100, 200));

// TODO I don't like it because, if an assertion fails I don't know which have failed and the program exits
Assertions()
.assertFalse(or(false, false))
.assertTrue(or(true, false))
.assertTrue(or(false, true))
.assertTrue(or(true, true))

.assertFalse(and(false, false))
.assertFalse(and(true, false))
.assertFalse(and(false, true))
.assertTrue(and(true, true))
.assertTrue(not(false))
.assertFalse(not(true))

.assertTrue("<", ifChar('<').eq('<'))
.assertTrue("=", ifChar('=').eq('='))
.assertTrue(">", ifChar('>').eq('>'))
.assertTrue("a", ifChar('a').eq('?'))

.assertTrue("<", ifChar2('<').eq('<'))
.assertTrue("=", ifChar2('=').eq('='))
.assertTrue(">", ifChar2('>').eq('>'))
.assertTrue("/", ifChar2('/').eq('/'))
.assertTrue("a", ifChar2('a').eq('?'))

.validate();

fn ifChar(c: char) -> char {
    if( c.eq('<'),
        { -> '<'; },
        c.eq('='),
        { -> '='; },
        c.eq('>'),
        { -> '>'; },
        { -> '?'; }
    );
}

fn ifChar2(c: char) -> char {
    if( c.eq('<'),
        { -> '<'; },
        c.eq('='),
        { -> '='; },
        c.eq('>'),
        { -> '>'; },
        c.eq('/'),
        { -> '/'; },
        { -> '?'; }
    );
}