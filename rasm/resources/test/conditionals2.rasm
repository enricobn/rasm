println(check(">"));
println(check(" "));
println(check("<"));

fn check(c: str) -> Vec<Option<str>> {
    if(c.eq(">"),
        { -> vecOf(Option::Some("first"), Option::Some("first"), Option::Some("first")); },
        c.eq(" "),
        { -> vecOf(Option::Some("second"), Option::Some("second"), Option::Some("second"));},
        { -> vecOf(Option::Some("third"), Option::Some("third"), Option::Some("third"));}
    );
}

fn toString<T>(o: Option<T>) -> str {
   o.match({ v -> "Some(".add(v).add(")");}, { -> "None";});
}