include "std.rasm"

struct Loop<T> {
    update: fn(i32, T) -> Option<T>,
    render: fn(T) -> ()
}

struct Model {
    x: i32,
    y: i32
}

let l = Loop(
    { time, model ->
        if(greater(time, 5),
            { -> NoneModel();},
            { ->
                let x = Model::x(model);
                let y = Model::y(model);
                Option::Some(Model(add(x, 1), add(y, 1)));
            });
    },
    { model ->
        let x = Model::x(model);
        let y = Model::y(model);
        print(x);
        print(",");
        println(y);
    }
);

loop(0, Model(0, 0), l);

fn loop<T>(time: i32, model: T, l: Loop<T>) {
    let update = Loop::update(l);
    let render = Loop::render(l);
    let result = update(time, model);
    run(result, { newModel -> render(newModel); loop(add(time, 1), newModel, l);}, { -> });
}

fn NoneModel() -> Option<Model> {
    Option::None();
}