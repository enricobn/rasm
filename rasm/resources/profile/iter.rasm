// C backend
// 12497490
// elapsed: 96225
// 12497490
// elapsed: 94489

let n = argv(1).fmap(fn(it) { it.toInt();}).getOrElse(10000);

doIt(n, range(0, n).iter);
doIt(n, vecRange(0, n).iter);

fn doIt<T>(n: int, i: Iter<T>) {
    let start = now();
    println(
        i
        .map(fn(it) { Some(it); })
        .map(fn(it) { it.map(add.curry(1)); })
        .map(fn(it) { it.map(add.curry(1)); })
        .map(fn(it) { it.map(add.curry(1)); })
        .map(fn(it) { it.map(add.curry(1)); })
        .map(fn(it) { it.map(add.curry(1)); })
        .filter(fn(it) { it.map(fn(it1) { it1.less(n.div(2));}).getOrElse(false); })
        .foldLeft(0, fn(result, actual) { result.add(actual.getOrElse(0)); })
    );

    println("elapsed: ", now().elapsedTime(start));
}